"""Implemente um programa em Python que:
‚Ä¢ Receba uma lista de n√∫meros inteiros positivos N = [5000, 10000, 15000, 20000].
‚Ä¢ Para cada n√∫mero n da lista, calcule o valor de log10(fatorial(n)) (pois o fatorial √© grande
demais para ser exibido diretamente).
‚Ä¢ Execute esses c√°lculos em paralelo, utilizando m√∫ltiplos n√∫cleos.
‚Ä¢ Ao final, exiba uma tabela com n e o valor de log10(n!).
Como o valor de n! cresce rapidamente, a dica √© calcular: log10(ùëõùëõ!) = log10(1) +
log10(2) + ‚ãØ + log10 ùëõùëõ. Isso evita estouro de mem√≥ria e permite compara√ß√£o entre grandes
fatoriais.
Requisitos funcionais
‚Ä¢ Utilize ProcessPoolExecutor para o paralelismo real
‚Ä¢ Crie uma fun√ß√£o log_fatorial(n) que retorna (n, log10(n!))
3
‚Ä¢ Use math.log10.
‚Ä¢ Exiba a sa√≠da com 4 casas decimais de precis√£o."""

import concurrent.futures
import math
from tabulate import tabulate

header = ["n", "log10(n!)"]
N = [5000, 10000, 15000, 20000]

def log_fatorial(n):
    x=0
    ENE = []
    for i in range(1, n+1):
        x += math.log10(i)
    return ([n, x])
    #return (n, log10(n!))

with concurrent.futures.ProcessPoolExecutor() as executor:
    a = list(map(log_fatorial, N))
    print(tabulate(a, headers=header, tablefmt='fancy_grid', numalign='center', stralign='center'))